#+TITLE: eduardo's website title
#+bibliography: ./refs.bib
#+HUGO_BASE_DIR: ../
#+HUGO_PAIRED_SHORTCODES: alert image
#+AUTHOR: Eduardo Bellani

* Pages
:PROPERTIES:
:EXPORT_HUGO_SECTION: /
:END:

** Home
:PROPERTIES:
:EXPORT_TITLE: homepage title
:EXPORT_FILE_NAME: _index
:EXPORT_HUGO_TYPE: homepage
:END:

# metadata for [[https://www.freecodecamp.org/news/what-is-open-graph-and-how-can-i-use-it-for-my-website/][open graph]] metadata
#+begin_description
eduardo's blog description
#+end_description

If you are a knowledge worker seeking to find a friend that believes
truth exists and that parts of it can be reached via our rational
powers, you are my audience.

My name is Eduardo Bellani. My main interests with this page is to write
about computer science, programming, philosophy from a moderate realist
tradition, and leadership.

I have been involved in the world of technology startups for more than
15 years. As developer, manager, entrepreneur, director. Mostly with
functional programming and research oriented projects/companies.


- Disclaimer :: The opinions expressed herein are those of the author,
  and should not be construed as representing the views of any
  employers, past or present, of mine.

* Blog                                                                :@blog:
:PROPERTIES:
:EXPORT_HUGO_SECTION: blog
:END:

** A dangerous book
:PROPERTIES:
:EXPORT_FILE_NAME: dangerous-book
:EXPORT_DATE: 2024-01-04
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug dangerous-book
:END:

I recently [[https://www.linkedin.com/feed/update/urn:li:activity:7147881347099926528?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7147881347099926528%2C7148003385328271360%29&dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287148003385328271360%2Curn%3Ali%3Aactivity%3A7147881347099926528%29][commented]] on how the book [cite:@Kleppmann_Martin2017-05-02]
is a dangerous book, due to a subtle error on how it defines data
models. I suppose it's my burden to further clarify this point, and for
that I'll use Hayek's critical methodological maxim:

#+begin_quote
We must first explain how an economy can possibly work right before we
can meaningfully ask what might go wrong
#+end_quote

*** What is a data model?

Here are 3 definitions, in increasing level of detail:

#+begin_quote
A data model is an abstract, self-contained, logical definition of the
objects, operators, and so forth, that together constitute the abstract
machine with which users interact. The objects allow us to model the
structure of data. The operators allow us to model its behavior.
[cite:@10.5555/861613]:
#+end_quote

#+begin_quote
1) a collection of data structure types (the building blocks of any
   database that conforms to the model);
2) a collection of operators or inferencing rules, which can be applied
   to any valid instances of the data types listed in (i), to retrieve
   or derive data from any parts of those structures in any combinations
   desired;
3) a collection of general integrity rules, which implicitly or
   explicitly define the set of consistent database states or changes of
   state or both -- these rules may sometimes be expressed as
   insert-update-delete rules.

[cite:@10.1145/960124.806891]
#+end_quote

In particular, the Relational Data Model

#+begin_quote
1) An open-ended collection of scalar types, including type BOOLEAN in
   particular
2) A type generator and an intended interpretation for relations of
   types generated thereby
3) Facilities for defining variables of such generated
   relation types
4) A assignment operator for assigning values to such variables
5) A complete (but otherwise open-ended) collection of generic operators
   for deriving values from other values
[cite:@Date_Chris2015-12-15]
#+end_quote


Unfortunately, in our industry, it almost exclusively means a model of
which information is relevant to particular business cases. Those used
to be called Conceptual Schemas. It is part of the classic data model
progression[cite:@Steel1975b]:

Conceptual schema -> Logical schema -> Physical schema [fn:1]

What are those? I can't do better than [cite:@pascal_guide]

#+begin_quote
Think of a conceptual model as the territory, the logical model as its
symbolic representation on the map and the map print and medium (paper,
plastic, screen) as the physical model.
#+end_quote

How about the Data Model, how does it fit in this metaphor?

#+begin_quote
The data model is the map legend that provides the mapping symbols and
their correspondence to the elements of the territory (e.g., cities,
highways, forests and so on) they symbolize on the map.
#+end_quote

*** What is wrong with the book's definition?


[cite:@Kleppmann_Martin2017-05-02] does not provide an explicit
definition. The closest he has is this paragraph:

#+begin_quote
Most applications are built by layering one data model on top of
another. For each layer, the key question is: how is it represented in
terms of the next-lower layer?
#+end_quote

My translation of this, given the rest of the book's chapter on Data
Models, is that a Data Model for the author is any particular
implementation of a higher abstraction in a lower abstraction would
count as a Data Model. So, the author refers to all 4 models (and any
concrete instance of them) using the same term.

*** Why does this matter?

I hope that the consequences of such confusion would be clear to the
reader. If not, consider the advice of [cite:@pascal_guide]

#+begin_quote
Referring to all four as data models, or using the terms interchangeably
blurs the important differences, reflecting common confusion of levels
of representation, namely

- Conceptual-logical conflation (CLC);
- Logical-physical confusion (LPC).

with costly consequences.
#+end_quote

A single example from the book should suffice, I think:

#+begin_quote
There are several driving forces behind the adoption of NoSQL databases,
including:

- A need for greater scalability than relational databases can easily
  achieve, including very large datasets or very high write throughput
  ...
#+end_quote

Here, the author is confusing a Data Model (the relational data model)
with physical concerns (scalability and throughput), which might lead to
wrong (and very costly) technology and business decisions.


#+print_bibliography:

** Themes of the Elite Private School Curriculum
:PROPERTIES:
:EXPORT_FILE_NAME: theme-elite-schooling
:EXPORT_DATE: 2023-11-26
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug theme-elite-schooling
:END:

I think its fair to say that one can significantly improve one's chances
of being materially successful in life by learning John Taylor Gatto’s
14 Themes of the Elite Private School Curriculum[fn:2]:

1. A theory of human nature (as embodied in history, philosophy, theology,
   literature and law).

2. Skill in the active literacies (writing, public speaking).

3. Insight into the major institutional forms (courts, corporations, military,
   education).

4. Repeated exercises in the forms of good manners and politeness; based on
   the notion that they are the foundation of all future relationships, all
   future alliances, and access to places that you might want to go.

5. Independent work.

6. Energetic physical sports are the only way to confer grace on the human
   presence, and that that grace translates into power and money later on. Also,
   they teach you practice in handling pain, and in dealing with emergencies.

7. A complete theory of access to any place and any person.

8. Responsibility as an utterly essential part of the curriculum; always to
   grab it when it is offered and always to deliver more than is asked for.

9. Arrival at a personal code of standards (in production, behavior and
   morality).

10. To have a familiarity with, and to be at ease with, the fine
    arts. (cultural capital)

11. The power of accurate observation and recording. For example, sharpen the
    perception by being able to draw accurately.

12. The ability to deal with challenges of all sorts.

13. A habit of caution in reasoning to conclusions.

14. The constant development and testing of prior judgements: you make
    judgements, you discriminate value, and then you follow up and “keep an eye”
    on your predictions to see how far skewed, or how consistent, your
    predictions were.




** CQRS as nominalism
:PROPERTIES:
:EXPORT_FILE_NAME: cqrs-nominalism
:EXPORT_DATE: 2023-11-04
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug cqrs-nominalism
:END:

A theme that I think is important to understand a lot of modernity and
the IT sector in particular, is nominalism.[fn:3]

So, what is Nominalism, and why does it matter? I'll start with a
concrete case and work my way to the abstract definition. The case in
point is a somewhat popular architecture tactic, CQRS.

What is CQRS? Here is an authoritative word on it[cite:@cqrs_young]:

#+begin_quote
Command and Query Responsibility Segregation (CQRS) originated with
Bertrand Meyer’s Command and Query Separation Principle

...

It states that every method should either be a command that performs an
action, or a query that returns data to the caller, but not both. In
other words, asking a question should not change the answer. More
formally, methods should return a value only if they are referentially
transparent and hence possess no side effects.

...

Basically it boils down to. If you have a return value you cannot mutate
state. If you mutate state your return type must be void.

...

in CQRS objects are split into two objects, one containing the Commands
one containing the Queries.
#+end_quote

CQRS is basically then an extension on CQS, but played on objects
instead of methods. It leverages the notions of immutable and mutable
objects, a feature it shares with a more encompassing approach,
DDD[cite:@Evans_Eric2014-09-22_ddd_ref]. Here is a mapping of the
terminology. [fn:4]

#+caption: CQRS/DDD/Traditional computer science terms mapping
| CQRS         | DDD                       | Traditional         | Interpretation                                                                                       |
|--------------+---------------------------+---------------------+------------------------------------------------------------------------------------------------------|
| Domain model | Entity                    | Variable            | A symbol that represents a value of a given type. Can represent  different values on different calls |
| Read model   | Value Object              | Value               | An element of a set                                                                                  |
| Command      | Aggregate command         | assignment operator | Change the value of a variable                                                                       |
| Query        | Side effect free function | function call       | Derive values from values                                                                            |


As this table shows, we have new names for old things, and people think
that because of that they *are* different things. My point is that this
is because of a nominalist position of the people on the CQRS community,
even if they are unaware of that. Why? Here's what nominalism is:

#+begin_quote
Nominalism ... denies the existence of abstract and universal concepts,
and refuses to admit that the intellect has the power of engendering
them. What are called general ideas are only names, mere verbal
designations, serving as labels for a collection of things or a series
of particular events. [cite:@wulf_universals]
#+end_quote

When you don't believe that general ideas exist as such, you have a
strong (inevitable?) tendency to mistake names for things, like the
CQRS community did here.

/PS/: Any implementation patterns that apply to CQRS would also apply to
the tradional concepts, since my point here is to show that *they are
the same thing*.

#+print_bibliography:

** On belts and value
:PROPERTIES:
:EXPORT_FILE_NAME: stand-out-short
:EXPORT_DATE: 2023-09-18
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug stand-out-short
:END:

Someone asked me about this, so I feel it might help people out there.

The short, no nonsense advise I give to people on standing out as a
programmer:

1. Generate results
2. Make your boss look good
3. Join a relevant open source project



** How to stand out in your career, the shortest version I know
:PROPERTIES:
:EXPORT_FILE_NAME: stand-out-short
:EXPORT_DATE: 2023-09-18
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug stand-out-short
:END:

Someone asked me about this, so I feel it might help people out there.

The short, no nonsense advise I give to people on standing out as a
programmer:

1. Generate results
2. Make your boss look good
3. Join a relevant open source project

** Recruitment and Selection of high performing programmers
:PROPERTIES:
:EXPORT_FILE_NAME: rec-sel-programmers
:EXPORT_DATE: 2023-08-26
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug rec-sel-programmers
:END:

What could be more important for a technology company than great
software? High performing software developers and their teams. After
all, they are the ones who actually create and maintain that great
software.

*** But do they really make a difference?

I'll let the numbers speak for themselves. Here are the typical
variations in:[cite:@diagram_variation_performance]

- Individual performance :: 20 to 1,

- Team performance :: 10 to 1,

- Method performance :: 1.2 to 1.


One can find a compelling illustration of these data on
[cite:@wilson-making-soft]. Two organizations, similar resources,
similar goal, vastly different performance:

- Microsoft excel 3 :: 649000 Lines of Code (Loc) in 50 Man Years (MY) = /12980/
- Lotus 123 :: 400000 LoC in 260 MY = /1538/

*** Recruitment and selection

#+begin_quote
Recruitment is the process of finding potential candidates to apply for
a job position, whereas selection is the process of identifying the best
candidate to hire. [cite:@rec_indeed]
#+end_quote

To find high performing candidates, you need to find markers of
belonging to some high performing culture. Usually something that is
very hard to master and that the marketplace ignores is a good bet. As
an exapmle, for backend developers, one might look for:

- Haskell or other functional programming language not in widespread
  use;

- Relational theory and other rigorous discipline misunderstood by the
  majority of the marketplace,

To filter them, I'd advise using a combination of the following methods
[cite:@schmidt_validity]:

  #+caption: Validity of selection methods
  | Procedure                           | Validity(r) | Multiple(R) | % gain |
  |-------------------------------------+-------------+-------------+--------|
  | GMA tests                           |         .65 |             |        |
  | Integrity tests                     |         .46 |         .78 |    20% |
  | Employment interviews (structured)  |         .58 |         .76 |    18% |
  | Employment interviews               |         .58 |         .73 |    13% |
  | Interests                           |         .31 |         .71 |    10% |
  | Phone-based interviews (structured) |         .46 |         .70 |     9% |
  | Conscientiousness                   |         .22 |         .70 |     8% |
  | Reference checks                    |         .26 |         .70 |     8% |
  | Openness to Experience              |         .04 |         .69 |     6% |
  | Biographical data                   |         .35 |         .68 |     6% |
  | Job experience (years)              |         .16 |         .68 |     5% |

For instance, a (GMA + Integrity + Conscientiousness + Structured
interview + Work Sample) combo should take at most 3 hours from the
candidate and 1 from your team.



#+print_bibliography:


** What is a good manager?   :management:
:PROPERTIES:
:EXPORT_FILE_NAME: what-is-a-good-manager
:EXPORT_DATE: 2023-07-29
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug what-is-a-good-manager
:END:


It is hard to do science without proper definitions. So what is a manager?

Abstracting from [cite:@horstman2016effective], my definition of a
manager is the following:

#+begin_quote
A manager continuously balances present output with creating the
conditions of future output.
#+end_quote


#+caption: The Good Sheperd, emblem found in a Roman catacomb, sec III
[[./good-shepherd.png]]

As one can see, this definition is similar to an investor. That is
expected, since a manager is an investor of a company's
resources. [fn:5]

As an illustration, a manager can usually deliver more results in the
present by burning up people. This probably will increase turnover in
the future. Is it the right choice? Only with a holistic view and sound
judgement can one decide correctly.

Given this definition, one can easily see that a good manager is *not*
some things:

- An extrovert
- A good communicator
- A frequent yeller
- Someone who cares
- Someone who is agreeable

#+print_bibliography:

** Is chatGPT replacing you? or: The nature of the intellectual act :philosophy:
:PROPERTIES:
:EXPORT_FILE_NAME: ai-intellectual-act
:EXPORT_DATE: 2023-07-11
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug ai-intellectual-act
:END:

I have come across people claiming to fear being replaced by bots,
specially chatGPT and other ~large language models (LLM)~. In this
article I'll take such statements at face value, despite my reservations
about the sincerity of many of them.

The short answer is to the question in the title is no, you will not get
replaced. The longer answer is below.

#+attr_shortcode: :side left
#+caption: Rudolph, Conrad. The Mystic Ark: Hugh of Saint Victor, Art, and Thought in the Twelfth Century.
[[./mystic-ark-hires-1.jpg]]

In order to understand if a LLM ~can~ replace you, you need to
understand what it is, since /agere sequitur esse/ (action follows
being). Here's what an authoritative source has to say about it:

#+begin_quote
The basic concept of ChatGPT is at some level rather simple. Start from
a huge sample of human-created text from the web, books, etc. Then train
a neural net to generate text that’s “like this”. And in particular,
make it able to start from a “prompt” and then continue with text that’s
“like what it’s been trained with”.

As we’ve seen, the actual neural net in ChatGPT is made up of very
simple elements—though billions of them. And the basic operation of the
neural net is also very simple, consisting essentially of passing input
derived from the text it’s generated so far “once through its elements”
(without any loops, etc.) for every new word (or part of a word) that it
generates. [cite:@chat_gpt_wolfram_2023]
#+end_quote

What it ~does~ is basically statistical correlation. So, what the
intellectual act of a person consists of? My summary of
[cite:@don_educ_fil]:

The intellectual act is a spiritual act, in contrast to a material
one. It consists in abstracting the essential form from individual
sensible perception. Grasping the universals out of particulars.

The last point is what I think underlies the actual fear. We live in a
nominalist age, such that[cite:@wulf_universals] it

#+begin_quote
... denies the existence of abstract and universal concepts, and refuses to
admit that the intellect has the power of engendering them.
#+end_quote

Therein lies the confusion that generates the fear. The correct
interpretation of reality is what has been traditionally called Moderate
Realism[cite:@wulf_universals]:

#+begin_quote
Moderate Realism, finally, declares that there are universal concepts
representing faithfully realities that are not universal.

How can there be harmony between the former and the latter? The latter
are particular, but we have the power of representing them to ourselves
abstractly. Now the abstract type, when the intellect considers it
reflectively and contrasts it with the particular subjects in which it
is realized or capable of being realized, is attributable indifferently
to any and all of them. This applicability of the abstract type to the
individuals is its universality.
#+end_quote

Fear not them, and trust in what you are analogous to, which is the
Intellect itself

#+print_bibliography:

** An illustrated way to enable openVPN on Qubes OS 4.1.2         :security:
:PROPERTIES:
:EXPORT_FILE_NAME: vpn-qubes
:EXPORT_DATE: 2023-07-01
:EXPORT_HUGO_CUSTOM_FRONT_MATTER: :slug vpn-qubes
:END:
#+begin_description
description of first post
#+end_description

In my view, Qubes OS lives up to its motto: ~A reasonably secure
operating system~. I use it for work and personal matters every day.

One challenging bit, when you use it in a work setting specially, is to
set up a VPN qube for your [[https://www.qubes-os.org/doc/glossary/#app-qube][app qubes]].

There are probably other ways to do this, but the way I chose to
structure my setup was the following:

#+caption: VPN network structure on Qubes
#+begin_src plantuml :file vpn_qubes.png :exports results :cache yes
  @startuml

  agent "sys-net" as sys_net      #Red
  agent "sys-firewall" as sys_firewall #Green
  agent "personal" as personal     #Yellow
  agent "work-vpn" as work_vpn     #Green
  agent "work" as work         #Blue

  personal     -up-> sys_firewall
  work         -up-> work_vpn
  work_vpn     -up-> sys_firewall
  sys_firewall -up-> sys_net

  @enduml
#+end_src

#+attr_shortcode: :src vpn_qubes.png :side left
#+RESULTS[92b96011d1891496217bb07761ac26457b642d99]:
[[file:vpn_qubes.png]]

After you create your [[https://www.qubes-os.org/doc/glossary/#app-qube][app qube]] for the VPN and assuming your template is
Debian, go to the template terminal (Debian 11) and run:

#+begin_src shell
  $ sudo apt install openvpn network-manager-openvpn-gnome
#+end_src

After this you should enable the network-manager service:

[[./vpn-network-service.png]]

Here comes the (for me) obscure trick: after importing your opvn file
through the network manager:

1. Go to IPv4 Settings tab
2. Click to the ~Routes...~ button
3. Select the ~Use this connection only for resources on its network~


Why does it work? I don't know. If you do, please email me.

** Index
:PROPERTIES:
:EXPORT_TITLE: blog section title
:EXPORT_FILE_NAME: _index
:END:
#+begin_description
this is the description of the blog section
#+end_description

* Footnotes

[fn:1] (schemas are synonymous to models in this context)

[fn:2] As listed in [[https://www.youtube.com/watch?v=IZBdv2yznmI][The Ultimate History Lesson]]

[fn:3] You will probably see me return to this topic in other posts.

[fn:4] I got the idea of such table from a similar table found on
chapter 25 of  [cite:@10.5555/861613]

[fn:5] The manager can be seen as a vicarious owner of company
resources.
