<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Eduardo&#39;s blog</title>
  <link href="https://ebellani.github.io/blog/"/>
  
    <link href="https://ebellani.github.io/blog/atom.xml" rel="self" type="application/atom+xml" />
  
  <updated>2024-01-31T03:26:01Z</updated>
  <author>
    <name>Eduardo Bellani</name>
    
  </author>
  <generator>Hugo</generator>
  <id>https://ebellani.github.io/blog/</id>
  
  <entry>
    <title>Renaming, not abstraction, is the problem of our industry</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2024/renaming-not-abstraction/"/>
    <id>https://ebellani.github.io/blog/2024/renaming-not-abstraction/</id>
    <published>2024-01-30T00:00:00Z</published>
    <updated>2024-01-30T00:00:00Z</updated>
    <summary>abstraction (n.) (Latin abs, from trahere, to draw).
 I&amp;rsquo;ve seen people I consider good software engineers complaining that over-abstraction is a (the?) major problem in our industry today. Such points are usually raised when discussing software architecture in particular (one example: (iamprovidence 2023)).
I&amp;rsquo;d like to defend abstraction, and how I don&amp;rsquo;t think it is possible to have over abstraction (in the same sense you cannot be overly good, or overly healthy).</summary>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;abstraction (n.) (Latin abs, from trahere, to draw).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I&amp;rsquo;ve seen people I consider good software engineers complaining that
over-abstraction is a (the?) major problem in our industry today. Such
points are usually raised when discussing software architecture in
particular (one example: (&lt;a href=&#34;#citeproc_bib_item_2&#34;&gt;iamprovidence 2023&lt;/a&gt;)).&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;d like to defend abstraction, and how I don&amp;rsquo;t think it is possible to
have over abstraction (in the same sense you cannot be overly good, or
overly healthy).&lt;/p&gt;
&lt;p&gt;The definition I&amp;rsquo;d like to use for abstraction is this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The most eminent Scholastics, however, following Aristotle, ascribe to
the mind in its higher aspect a power (called the Active Intellect)
which abstracts from the representations of concrete things or qualities
the typical, ideal, essential elements, leaving behind those that are
material and particular.  (&lt;a href=&#34;#citeproc_bib_item_1&#34;&gt;Duffy 1907&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As one can see from such definition, the process is to select the
essentials from its concrete manifestation. On software engineering,
that means picking out the right form for your requirements, functional
or otherwise.&lt;/p&gt;
&lt;p&gt;What I think people are complaining about is renaming/rebranding
concepts, which is rife in our industry (see the table on &lt;a href=&#34;/blog/2023/cqrs-nominalism/&#34;&gt;CQRS as
nominalism&lt;/a&gt; for an example).&lt;/p&gt;
&lt;p&gt;What to do then, as a software engineer? Go beyond names, and meditate
on the essences of your craft. What is a function, what is a relation,
what is a number? It will then not matter (to you at least) if someone
calls a function an object, or a relation a table.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;style&gt;.csl-entry{text-indent: -1.5em; margin-left: 1.5em;}&lt;/style&gt;&lt;div class=&#34;csl-bib-body&#34;&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_1&#34;&gt;&lt;/a&gt;Duffy, F. 1907. “Abstraction.” The Catholic Encyclopedia, Vol 11. &lt;a href=&#34;http://www.newadvent.org/cathen/01074a.htm&#34;&gt;http://www.newadvent.org/cathen/01074a.htm&lt;/a&gt;.&lt;/div&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_2&#34;&gt;&lt;/a&gt;iamprovidence. 2023. “Backend Side Architecture Evolution (N-Layered, Ddd, Hexagon, Onion, Clean Architecture).” &lt;a href=&#34;https://web.archive.org/web/20230721054753/https://medium.com/@iamprovidence/backend-side-architecture-evolution-n-layered-ddd-hexagon-onion-clean-architecture-643d72444ce4&#34;&gt;https://web.archive.org/web/20230721054753/https://medium.com/@iamprovidence/backend-side-architecture-evolution-n-layered-ddd-hexagon-onion-clean-architecture-643d72444ce4&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;</content>
    
    
    <category term="blog"/>
    
  </entry>
  
  <entry>
    <title>A dangerous book</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2024/dangerous-book/"/>
    <id>https://ebellani.github.io/blog/2024/dangerous-book/</id>
    <published>2024-01-04T00:00:00Z</published>
    <updated>2024-01-04T00:00:00Z</updated>
    <summary>I recently commented on how the book (Kleppmann 2017) is a dangerous book, due to a subtle error on how it defines data models. I suppose it&amp;rsquo;s my burden to further clarify this point, and for that I&amp;rsquo;ll use Hayek&amp;rsquo;s critical methodological maxim:
 We must first explain how an economy can possibly work right before we can meaningfully ask what might go wrong
 What is a data model? Here are 3 definitions, in increasing level of detail:</summary>
    <content type="html">&lt;p&gt;I recently &lt;a href=&#34;https://www.linkedin.com/feed/update/urn:li:activity:7147881347099926528?commentUrn=urn%3Ali%3Acomment%3A%28activity%3A7147881347099926528%2C7148003385328271360%29&amp;amp;dashCommentUrn=urn%3Ali%3Afsd_comment%3A%287148003385328271360%2Curn%3Ali%3Aactivity%3A7147881347099926528%29&#34;&gt;commented&lt;/a&gt; on how the book (Kleppmann 2017)
is a dangerous book, due to a subtle error on how it defines data
models. I suppose it&amp;rsquo;s my burden to further clarify this point, and for
that I&amp;rsquo;ll use Hayek&amp;rsquo;s critical methodological maxim:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We must first explain how an economy can possibly work right before we
can meaningfully ask what might go wrong&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;what-is-a-data-model&#34;&gt;What is a data model?&lt;/h2&gt;
&lt;p&gt;Here are 3 definitions, in increasing level of detail:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A data model is an abstract, self-contained, logical definition of the
objects, operators, and so forth, that together constitute the abstract
machine with which users interact. The objects allow us to model the
structure of data. The operators allow us to model its behavior.
(Date 2003):&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!--quoteend--&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;a collection of data structure types (the building blocks of any
database that conforms to the model);&lt;/li&gt;
&lt;li&gt;a collection of operators or inferencing rules, which can be applied
to any valid instances of the data types listed in (i), to retrieve
or derive data from any parts of those structures in any combinations
desired;&lt;/li&gt;
&lt;li&gt;a collection of general integrity rules, which implicitly or
explicitly define the set of consistent database states or changes of
state or both &amp;ndash; these rules may sometimes be expressed as
insert-update-delete rules.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(Codd 1980)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In particular, the Relational Data Model&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;An open-ended collection of scalar types, including type BOOLEAN in
particular&lt;/li&gt;
&lt;li&gt;A type generator and an intended interpretation for relations of
types generated thereby&lt;/li&gt;
&lt;li&gt;Facilities for defining variables of such generated
relation types&lt;/li&gt;
&lt;li&gt;A assignment operator for assigning values to such variables&lt;/li&gt;
&lt;li&gt;A complete (but otherwise open-ended) collection of generic operators
for deriving values from other values&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(Date 2015)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unfortunately, in our industry, it almost exclusively means a model of
which information is relevant to particular business cases. Those used
to be called Conceptual Schemas. It is part of the classic data model
progression(Steel 1975):&lt;/p&gt;
&lt;p&gt;Conceptual schema -&amp;gt; Logical schema -&amp;gt; Physical schema &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;What are those? I can&amp;rsquo;t do better than (Pascal 2016)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Think of a conceptual model as the territory, the logical model as its
symbolic representation on the map and the map print and medium (paper,
plastic, screen) as the physical model.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;How about the Data Model, how does it fit in this metaphor?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The data model is the map legend that provides the mapping symbols and
their correspondence to the elements of the territory (e.g., cities,
highways, forests and so on) they symbolize on the map.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;what-is-wrong-with-the-book-s-definition&#34;&gt;What is wrong with the book&amp;rsquo;s definition?&lt;/h2&gt;
&lt;p&gt;(Kleppmann 2017) does not provide an explicit
definition. The closest he has is this paragraph:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Most applications are built by layering one data model on top of
another. For each layer, the key question is: how is it represented in
terms of the next-lower layer?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;My translation of this, given the rest of the book&amp;rsquo;s chapter on Data
Models, is that a Data Model for the author is any particular
implementation of a higher abstraction in a lower abstraction would
count as a Data Model. So, the author refers to all 4 models (and any
concrete instance of them) using the same term.&lt;/p&gt;
&lt;h2 id=&#34;why-does-this-matter&#34;&gt;Why does this matter?&lt;/h2&gt;
&lt;p&gt;I hope that the consequences of such confusion would be clear to the
reader. If not, consider the advice of (Pascal 2016)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Referring to all four as data models, or using the terms interchangeably
blurs the important differences, reflecting common confusion of levels
of representation, namely&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Conceptual-logical conflation (CLC);&lt;/li&gt;
&lt;li&gt;Logical-physical confusion (LPC).&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;with costly consequences.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A single example from the book should suffice, I think:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There are several driving forces behind the adoption of NoSQL databases,
including:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A need for greater scalability than relational databases can easily
achieve, including very large datasets or very high write throughput
&amp;hellip;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Here, the author is confusing a Data Model (the relational data model)
with physical concerns (scalability and throughput), which might lead to
wrong (and very costly) technology and business decisions.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;(schemas are synonymous to models in this context)&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
    
    
    <category term="blog"/>
    
  </entry>
  
  <entry>
    <title>Measure, don’t guess.</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2023/measure-dont-guess/"/>
    <id>https://ebellani.github.io/blog/2023/measure-dont-guess/</id>
    <published>2023-12-09T00:00:00Z</published>
    <updated>2023-12-09T00:00:00Z</updated>
    <summary>&amp;hellip; when you trade safety for performance, you may get neither. Especially when it comes to concurrency, the intuition of many developers about where a performance problem lies or which approach will be faster or more scalable is often incorrect.
It is therefore imperative that any performance tuning exercise be accompanied by concrete performance requirements (so you know both when to tune and when to stop tuning) and with a measurement program in place using a realistic configuration and load profile.</summary>
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;&amp;hellip; when you trade safety for performance, you may get
neither. Especially when it comes to concurrency, the intuition of many
developers about where a performance problem lies or which approach will
be faster or more scalable is often incorrect.&lt;/p&gt;
&lt;p&gt;It is therefore imperative that any performance tuning exercise be
accompanied by concrete performance requirements (so you know both when
to tune and when to stop tuning) and with a measurement program in place
using a realistic configuration and load profile.&lt;/p&gt;
&lt;p&gt;Measure again after tuning to verify that you’ve achieved the desired
improvements. The safety and maintenance risks associated with many
optimizations are bad enough—you don’t want to pay these costs if you
don’t need to—and you definitely don’t want to pay them if you don’t
even get the desired benefit. (&lt;a href=&#34;#citeproc_bib_item_1&#34;&gt;Goetz 2006&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;style&gt;.csl-entry{text-indent: -1.5em; margin-left: 1.5em;}&lt;/style&gt;&lt;div class=&#34;csl-bib-body&#34;&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_1&#34;&gt;&lt;/a&gt;Goetz, B. 2006. &lt;i&gt;Java Concurrency in Practice&lt;/i&gt;. Addison-Wesley.&lt;/div&gt;
&lt;/div&gt;</content>
    
    
    <category term="blog"/>
    
  </entry>
  
  <entry>
    <title>Themes of the Elite Private School Curriculum</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2023/theme-elite-schooling/"/>
    <id>https://ebellani.github.io/blog/2023/theme-elite-schooling/</id>
    <published>2023-11-26T00:00:00Z</published>
    <updated>2023-11-26T00:00:00Z</updated>
    <summary>I think its fair to say that one can significantly improve one&amp;rsquo;s chances of being materially successful in life by learning John Taylor Gatto’s 14 Themes of the Elite Private School Curriculum1:
  A theory of human nature (as embodied in history, philosophy, theology, literature and law).
  Skill in the active literacies (writing, public speaking).
  Insight into the major institutional forms (courts, corporations, military, education).</summary>
    <content type="html">&lt;p&gt;I think its fair to say that one can significantly improve one&amp;rsquo;s chances
of being materially successful in life by learning John Taylor Gatto’s
14 Themes of the Elite Private School Curriculum&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;A theory of human nature (as embodied in history, philosophy, theology,
literature and law).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Skill in the active literacies (writing, public speaking).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Insight into the major institutional forms (courts, corporations, military,
education).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Repeated exercises in the forms of good manners and politeness; based on
the notion that they are the foundation of all future relationships, all
future alliances, and access to places that you might want to go.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Independent work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Energetic physical sports are the only way to confer grace on the human
presence, and that that grace translates into power and money later on. Also,
they teach you practice in handling pain, and in dealing with emergencies.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A complete theory of access to any place and any person.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Responsibility as an utterly essential part of the curriculum; always to
grab it when it is offered and always to deliver more than is asked for.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Arrival at a personal code of standards (in production, behavior and
morality).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To have a familiarity with, and to be at ease with, the fine
arts. (cultural capital)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The power of accurate observation and recording. For example, sharpen the
perception by being able to draw accurately.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The ability to deal with challenges of all sorts.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A habit of caution in reasoning to conclusions.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The constant development and testing of prior judgements: you make
judgements, you discriminate value, and then you follow up and “keep an eye”
on your predictions to see how far skewed, or how consistent, your
predictions were.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;As listed in &lt;a href=&#34;https://www.youtube.com/watch?v=IZBdv2yznmI&#34;&gt;The Ultimate History Lesson&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
    
    
    <category term="blog"/>
    
  </entry>
  
  <entry>
    <title>CQRS as nominalism</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2023/cqrs-nominalism/"/>
    <id>https://ebellani.github.io/blog/2023/cqrs-nominalism/</id>
    <published>2023-11-04T00:00:00Z</published>
    <updated>2023-11-04T00:00:00Z</updated>
    <summary>A theme that I think is important to understand a lot of modernity and the IT sector in particular, is nominalism.1
So, what is Nominalism, and why does it matter? I&amp;rsquo;ll start with a concrete case and work my way to the abstract definition. The case in point is a somewhat popular architecture tactic, CQRS.
What is CQRS? Here is an authoritative word on it(Young 2010):
 Command and Query Responsibility Segregation (CQRS) originated with Bertrand Meyer’s Command and Query Separation Principle</summary>
    <content type="html">&lt;p&gt;A theme that I think is important to understand a lot of modernity and
the IT sector in particular, is nominalism.&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;So, what is Nominalism, and why does it matter? I&amp;rsquo;ll start with a
concrete case and work my way to the abstract definition. The case in
point is a somewhat popular architecture tactic, CQRS.&lt;/p&gt;
&lt;p&gt;What is CQRS? Here is an authoritative word on it(&lt;a href=&#34;#citeproc_bib_item_4&#34;&gt;Young 2010&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Command and Query Responsibility Segregation (CQRS) originated with
Bertrand Meyer’s Command and Query Separation Principle&lt;/p&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;It states that every method should either be a command that performs an
action, or a query that returns data to the caller, but not both. In
other words, asking a question should not change the answer. More
formally, methods should return a value only if they are referentially
transparent and hence possess no side effects.&lt;/p&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;Basically it boils down to. If you have a return value you cannot mutate
state. If you mutate state your return type must be void.&lt;/p&gt;
&lt;p&gt;&amp;hellip;&lt;/p&gt;
&lt;p&gt;in CQRS objects are split into two objects, one containing the Commands
one containing the Queries.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CQRS is basically then an extension on CQS, but played on objects
instead of methods. It leverages the notions of immutable and mutable
objects, a feature it shares with a more encompassing approach,
DDD(&lt;a href=&#34;#citeproc_bib_item_3&#34;&gt;Evans 2014&lt;/a&gt;). Here is a mapping of the
terminology. &lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;div class=&#34;table-caption&#34;&gt;
  &lt;span class=&#34;table-number&#34;&gt;Table 1:&lt;/span&gt;
  CQRS/DDD/Traditional computer science terms mapping
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;CQRS&lt;/th&gt;
&lt;th&gt;DDD&lt;/th&gt;
&lt;th&gt;Traditional&lt;/th&gt;
&lt;th&gt;Interpretation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Domain model&lt;/td&gt;
&lt;td&gt;Entity&lt;/td&gt;
&lt;td&gt;Variable&lt;/td&gt;
&lt;td&gt;A symbol that represents a value of a given type. Can represent  different values on different calls&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Read model&lt;/td&gt;
&lt;td&gt;Value Object&lt;/td&gt;
&lt;td&gt;Value&lt;/td&gt;
&lt;td&gt;An element of a set&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Command&lt;/td&gt;
&lt;td&gt;Aggregate command&lt;/td&gt;
&lt;td&gt;assignment operator&lt;/td&gt;
&lt;td&gt;Change the value of a variable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Query&lt;/td&gt;
&lt;td&gt;Side effect free function&lt;/td&gt;
&lt;td&gt;function call&lt;/td&gt;
&lt;td&gt;Derive values from values&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;As this table shows, we have new names for old things, and people think
that because of that they &lt;strong&gt;are&lt;/strong&gt; different things. My point is that this
is because of a nominalist position of the people on the CQRS community,
even if they are unaware of that. Why? Here&amp;rsquo;s what nominalism is:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Nominalism &amp;hellip; denies the existence of abstract and universal concepts,
and refuses to admit that the intellect has the power of engendering
them. What are called general ideas are only names, mere verbal
designations, serving as labels for a collection of things or a series
of particular events. (&lt;a href=&#34;#citeproc_bib_item_2&#34;&gt;De Wulf 1911&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When you don&amp;rsquo;t believe that general ideas exist as such, you have a
strong (inevitable?) tendency to mistake names for things, like the
CQRS community did here.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;PS&lt;/em&gt;: Any implementation patterns that apply to CQRS would also apply to
the tradional concepts, since my point here is to show that &lt;strong&gt;they are
the same thing&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;style&gt;.csl-entry{text-indent: -1.5em; margin-left: 1.5em;}&lt;/style&gt;&lt;div class=&#34;csl-bib-body&#34;&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_1&#34;&gt;&lt;/a&gt;Date, C.J. 2003. &lt;i&gt;An Introduction to Database Systems&lt;/i&gt;. 8th ed. USA: Addison-Wesley Longman Publishing Co., Inc.&lt;/div&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_2&#34;&gt;&lt;/a&gt;De Wulf, Maurice. 1911. “Nominalism, Realism, Conceptualism.” The Catholic Encyclopedia, Vol 11. &lt;a href=&#34;https://www.newadvent.org/cathen/11090c.htm&#34;&gt;https://www.newadvent.org/cathen/11090c.htm&lt;/a&gt;.&lt;/div&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_3&#34;&gt;&lt;/a&gt;Evans, Eric. 2014. &lt;i&gt;Domain-driven design reference: Definitions and pattern summaries&lt;/i&gt;. Paperback. Dog Ear Pub Llc.&lt;/div&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_4&#34;&gt;&lt;/a&gt;Young, Greg. 2010. “Cqrs Documents by Greg Young.” &lt;a href=&#34;https://cqrs.files.wordpress.com/2010/11/cqrs_documents.pdf&#34;&gt;https://cqrs.files.wordpress.com/2010/11/cqrs_documents.pdf&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;You will probably see me return to this topic in other posts.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;I got the idea of such table from a similar table found on
chapter 25 of  (&lt;a href=&#34;#citeproc_bib_item_1&#34;&gt;Date 2003&lt;/a&gt;)&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
    
    
    <category term="blog"/>
    
  </entry>
  
  <entry>
    <title>How to stand out in your career, the shortest version I know</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2023/stand-out-short/"/>
    <id>https://ebellani.github.io/blog/2023/stand-out-short/</id>
    <published>2023-09-18T00:00:00Z</published>
    <updated>2023-09-18T00:00:00Z</updated>
    <summary>Someone asked me about this, so I feel it might help people out there.
The short, no nonsense advise I give to people on standing out as a programmer:
 Generate results Make your boss look good Join a relevant open source project  </summary>
    <content type="html">&lt;p&gt;Someone asked me about this, so I feel it might help people out there.&lt;/p&gt;
&lt;p&gt;The short, no nonsense advise I give to people on standing out as a
programmer:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Generate results&lt;/li&gt;
&lt;li&gt;Make your boss look good&lt;/li&gt;
&lt;li&gt;Join a relevant open source project&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    
    <category term="blog"/>
    
  </entry>
  
  <entry>
    <title>Recruitment and Selection of high performing programmers</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2023/rec-sel-programmers/"/>
    <id>https://ebellani.github.io/blog/2023/rec-sel-programmers/</id>
    <published>2023-08-26T00:00:00Z</published>
    <updated>2023-08-26T00:00:00Z</updated>
    <summary>What could be more important for a technology company than great software? High performing software developers and their teams. After all, they are the ones who actually create and maintain that great software.
But do they really make a difference? I&amp;rsquo;ll let the numbers speak for themselves. Here are the typical variations in:(Steve 2014)
 Individual performance 20 to 1, Team performance 10 to 1, Method performance 1.2 to 1.  One can find a compelling illustration of these data on (Oram and Wilson 2010).</summary>
    <content type="html">&lt;p&gt;What could be more important for a technology company than great
software? High performing software developers and their teams. After
all, they are the ones who actually create and maintain that great
software.&lt;/p&gt;
&lt;h2 id=&#34;but-do-they-really-make-a-difference&#34;&gt;But do they really make a difference?&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ll let the numbers speak for themselves. Here are the typical
variations in:(&lt;a href=&#34;#citeproc_bib_item_3&#34;&gt;Steve 2014&lt;/a&gt;)&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Individual performance&lt;/dt&gt;
&lt;dd&gt;20 to 1,&lt;/dd&gt;
&lt;dt&gt;Team performance&lt;/dt&gt;
&lt;dd&gt;10 to 1,&lt;/dd&gt;
&lt;dt&gt;Method performance&lt;/dt&gt;
&lt;dd&gt;1.2 to 1.&lt;/dd&gt;
&lt;/dl&gt;
&lt;p&gt;One can find a compelling illustration of these data on
(&lt;a href=&#34;#citeproc_bib_item_1&#34;&gt;Oram and Wilson 2010&lt;/a&gt;). Two organizations, similar resources,
similar goal, vastly different performance:&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;Microsoft excel 3&lt;/dt&gt;
&lt;dd&gt;649000 Lines of Code (Loc) in 50 Man Years (MY) = &lt;em&gt;12980&lt;/em&gt;&lt;/dd&gt;
&lt;dt&gt;Lotus 123&lt;/dt&gt;
&lt;dd&gt;400000 LoC in 260 MY = &lt;em&gt;1538&lt;/em&gt;&lt;/dd&gt;
&lt;/dl&gt;
&lt;h2 id=&#34;recruitment-and-selection&#34;&gt;Recruitment and selection&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Recruitment is the process of finding potential candidates to apply for
a job position, whereas selection is the process of identifying the best
candidate to hire. (&lt;a href=&#34;#citeproc_bib_item_4&#34;&gt;Team 2023&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To find high performing candidates, you need to find markers of
belonging to some high performing culture. Usually something that is
very hard to master and that the marketplace ignores is a good bet. As
an exapmle, for backend developers, one might look for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Haskell or other functional programming language not in widespread
use;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Relational theory and other rigorous discipline misunderstood by the
majority of the marketplace,&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To filter them, I&amp;rsquo;d advise using a combination of the following methods
(&lt;a href=&#34;#citeproc_bib_item_2&#34;&gt;Schmidt 2016&lt;/a&gt;):&lt;/p&gt;
&lt;div class=&#34;table-caption&#34;&gt;
  &lt;span class=&#34;table-number&#34;&gt;Table 1:&lt;/span&gt;
  Validity of selection methods
&lt;/div&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Procedure&lt;/th&gt;
&lt;th&gt;Validity(r)&lt;/th&gt;
&lt;th&gt;Multiple(R)&lt;/th&gt;
&lt;th&gt;% gain&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;GMA tests&lt;/td&gt;
&lt;td&gt;.65&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Integrity tests&lt;/td&gt;
&lt;td&gt;.46&lt;/td&gt;
&lt;td&gt;.78&lt;/td&gt;
&lt;td&gt;20%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Employment interviews (structured)&lt;/td&gt;
&lt;td&gt;.58&lt;/td&gt;
&lt;td&gt;.76&lt;/td&gt;
&lt;td&gt;18%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Employment interviews&lt;/td&gt;
&lt;td&gt;.58&lt;/td&gt;
&lt;td&gt;.73&lt;/td&gt;
&lt;td&gt;13%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Interests&lt;/td&gt;
&lt;td&gt;.31&lt;/td&gt;
&lt;td&gt;.71&lt;/td&gt;
&lt;td&gt;10%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Phone-based interviews (structured)&lt;/td&gt;
&lt;td&gt;.46&lt;/td&gt;
&lt;td&gt;.70&lt;/td&gt;
&lt;td&gt;9%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Conscientiousness&lt;/td&gt;
&lt;td&gt;.22&lt;/td&gt;
&lt;td&gt;.70&lt;/td&gt;
&lt;td&gt;8%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Reference checks&lt;/td&gt;
&lt;td&gt;.26&lt;/td&gt;
&lt;td&gt;.70&lt;/td&gt;
&lt;td&gt;8%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Openness to Experience&lt;/td&gt;
&lt;td&gt;.04&lt;/td&gt;
&lt;td&gt;.69&lt;/td&gt;
&lt;td&gt;6%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Biographical data&lt;/td&gt;
&lt;td&gt;.35&lt;/td&gt;
&lt;td&gt;.68&lt;/td&gt;
&lt;td&gt;6%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Job experience (years)&lt;/td&gt;
&lt;td&gt;.16&lt;/td&gt;
&lt;td&gt;.68&lt;/td&gt;
&lt;td&gt;5%&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;For instance, a (GMA + Integrity + Conscientiousness + Structured
interview + Work Sample) combo should take at most 3 hours from the
candidate and 1 from your team.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;style&gt;.csl-entry{text-indent: -1.5em; margin-left: 1.5em;}&lt;/style&gt;&lt;div class=&#34;csl-bib-body&#34;&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_1&#34;&gt;&lt;/a&gt;Oram, A., and G. Wilson. 2010. &lt;i&gt;Making Software: What Really Works, and Why We Believe It&lt;/i&gt;. O’Reilly Media.&lt;/div&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_2&#34;&gt;&lt;/a&gt;Schmidt, Frank. 2016. “The Validity and Utility of Selection Methods in Personnel Psychology: Practical and Theoretical Implications of 100 Years of Research Findings.”&lt;/div&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_3&#34;&gt;&lt;/a&gt;Steve, McConnell; 2014. “Seven Diagrams Every Software Professional Should Understand.” &lt;a href=&#34;url{https://youtu.be/zTKi4ijEsH0?t=2566}&#34;&gt;url{https://youtu.be/zTKi4ijEsH0?t=2566}&lt;/a&gt;.&lt;/div&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_4&#34;&gt;&lt;/a&gt;Team, Indeed Editorial. 2023. “Recruitment Vs. Selection: What’s the Difference?” &lt;a href=&#34;https://www.indeed.com/career-advice/career-development/recruitment-vs-selection&#34;&gt;https://www.indeed.com/career-advice/career-development/recruitment-vs-selection&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;</content>
    
    
    <category term="blog"/>
    
  </entry>
  
  <entry>
    <title>What is a good manager?</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2023/what-is-a-good-manager/"/>
    <id>https://ebellani.github.io/blog/2023/what-is-a-good-manager/</id>
    <published>2023-07-29T00:00:00Z</published>
    <updated>2023-07-29T00:00:00Z</updated>
    <summary>It is hard to do science without proper definitions. So what is a manager?
Abstracting from (Horstman 2016), my definition of a manager is the following:
 A manager continuously balances present output with creating the conditions of future output.
  Figure 1: The Good Sheperd, emblem found in a Roman catacomb, sec III
  As one can see, this definition is similar to an investor. That is expected, since a manager is an investor of a company&amp;rsquo;s resources.</summary>
    <content type="html">&lt;p&gt;It is hard to do science without proper definitions. So what is a manager?&lt;/p&gt;
&lt;p&gt;Abstracting from (&lt;a href=&#34;#citeproc_bib_item_1&#34;&gt;Horstman 2016&lt;/a&gt;), my definition of a
manager is the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A manager continuously balances present output with creating the
conditions of future output.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure&gt;&lt;img src=&#34;/ox-hugo/good-shepherd.png&#34;
         alt=&#34;Figure 1: The Good Sheperd, emblem found in a Roman catacomb, sec III&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;&lt;span class=&#34;figure-number&#34;&gt;Figure 1: &lt;/span&gt;The Good Sheperd, emblem found in a Roman catacomb, sec III&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;As one can see, this definition is similar to an investor. That is
expected, since a manager is an investor of a company&amp;rsquo;s
resources. &lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;As an illustration, a manager can usually deliver more results in the
present by burning up people. This probably will increase turnover in
the future. Is it the right choice? Only with a holistic view and sound
judgement can one decide correctly.&lt;/p&gt;
&lt;p&gt;Given this definition, one can easily see that a good manager is &lt;strong&gt;not&lt;/strong&gt;
some things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An extrovert&lt;/li&gt;
&lt;li&gt;A good communicator&lt;/li&gt;
&lt;li&gt;A frequent yeller&lt;/li&gt;
&lt;li&gt;Someone who cares&lt;/li&gt;
&lt;li&gt;Someone who is agreeable&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;style&gt;.csl-entry{text-indent: -1.5em; margin-left: 1.5em;}&lt;/style&gt;&lt;div class=&#34;csl-bib-body&#34;&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_1&#34;&gt;&lt;/a&gt;Horstman, M. 2016. &lt;i&gt;The Effective Manager&lt;/i&gt;. Wiley. &lt;a href=&#34;https://www.wiley.com/en-us/The+Effective+Manager-p-9781119244608&#34;&gt;https://www.wiley.com/en-us/The+Effective+Manager-p-9781119244608&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;The manager can be seen as a vicarious owner of company
resources.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content>
    
    <category term="management"/>
    
    
    <category term="blog"/>
    
  </entry>
  
  <entry>
    <title>Is chatGPT replacing you? or: The nature of the intellectual act</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2023/ai-intellectual-act/"/>
    <id>https://ebellani.github.io/blog/2023/ai-intellectual-act/</id>
    <published>2023-07-11T00:00:00Z</published>
    <updated>2023-07-11T00:00:00Z</updated>
    <summary>I have come across people claiming to fear being replaced by bots, specially chatGPT and other large language models (LLM). In this article I&amp;rsquo;ll take such statements at face value, despite my reservations about the sincerity of many of them.
The short answer is to the question in the title is no, you will not get replaced. The longer answer is below.
 Figure 1: Rudolph, Conrad. The Mystic Ark: Hugh of Saint Victor, Art, and Thought in the Twelfth Century.</summary>
    <content type="html">&lt;p&gt;I have come across people claiming to fear being replaced by bots,
specially chatGPT and other &lt;code&gt;large language models (LLM)&lt;/code&gt;. In this
article I&amp;rsquo;ll take such statements at face value, despite my reservations
about the sincerity of many of them.&lt;/p&gt;
&lt;p&gt;The short answer is to the question in the title is no, you will not get
replaced. The longer answer is below.&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;/ox-hugo/mystic-ark-hires-1.jpg&#34;
         alt=&#34;Figure 1: Rudolph, Conrad. The Mystic Ark: Hugh of Saint Victor, Art, and Thought in the Twelfth Century.&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;&lt;span class=&#34;figure-number&#34;&gt;Figure 1: &lt;/span&gt;Rudolph, Conrad. The Mystic Ark: Hugh of Saint Victor, Art, and Thought in the Twelfth Century.&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;In order to understand if a LLM &lt;code&gt;can&lt;/code&gt; replace you, you need to
understand what it is, since &lt;em&gt;agere sequitur esse&lt;/em&gt; (action follows
being). Here&amp;rsquo;s what an authoritative source has to say about it:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The basic concept of ChatGPT is at some level rather simple. Start from
a huge sample of human-created text from the web, books, etc. Then train
a neural net to generate text that’s “like this”. And in particular,
make it able to start from a “prompt” and then continue with text that’s
“like what it’s been trained with”.&lt;/p&gt;
&lt;p&gt;As we’ve seen, the actual neural net in ChatGPT is made up of very
simple elements—though billions of them. And the basic operation of the
neural net is also very simple, consisting essentially of passing input
derived from the text it’s generated so far “once through its elements”
(without any loops, etc.) for every new word (or part of a word) that it
generates. (&lt;a href=&#34;#citeproc_bib_item_3&#34;&gt;Wolfram 2023&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;What it &lt;code&gt;does&lt;/code&gt; is basically statistical correlation. So, what the
intellectual act of a person consists of? My summary of
(&lt;a href=&#34;#citeproc_bib_item_2&#34;&gt;Rosa 1993&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;The intellectual act is a spiritual act, in contrast to a material
one. It consists in abstracting the essential form from individual
sensible perception. Grasping the universals out of particulars.&lt;/p&gt;
&lt;p&gt;The last point is what I think underlies the actual fear. We live in a
nominalist age, such that(&lt;a href=&#34;#citeproc_bib_item_1&#34;&gt;De Wulf 1911&lt;/a&gt;) it&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;hellip; denies the existence of abstract and universal concepts, and refuses to
admit that the intellect has the power of engendering them.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Therein lies the confusion that generates the fear. The correct
interpretation of reality is what has been traditionally called Moderate
Realism(&lt;a href=&#34;#citeproc_bib_item_1&#34;&gt;De Wulf 1911&lt;/a&gt;):&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Moderate Realism, finally, declares that there are universal concepts
representing faithfully realities that are not universal.&lt;/p&gt;
&lt;p&gt;How can there be harmony between the former and the latter? The latter
are particular, but we have the power of representing them to ourselves
abstractly. Now the abstract type, when the intellect considers it
reflectively and contrasts it with the particular subjects in which it
is realized or capable of being realized, is attributable indifferently
to any and all of them. This applicability of the abstract type to the
individuals is its universality.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Fear not them, and trust in what you are analogous to, which is the
Intellect itself&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;style&gt;.csl-entry{text-indent: -1.5em; margin-left: 1.5em;}&lt;/style&gt;&lt;div class=&#34;csl-bib-body&#34;&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_1&#34;&gt;&lt;/a&gt;De Wulf, Maurice. 1911. “Nominalism, Realism, Conceptualism.” The Catholic Encyclopedia, Vol 11. &lt;a href=&#34;https://www.newadvent.org/cathen/11090c.htm&#34;&gt;https://www.newadvent.org/cathen/11090c.htm&lt;/a&gt;.&lt;/div&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_2&#34;&gt;&lt;/a&gt;Rosa, Antônio Donato Paulo. 1993. “A Educação Segundo a Filosofia Perene.” USP. &lt;a href=&#34;http://www.cristianismo.org.br/efp-ind.htm&#34;&gt;http://www.cristianismo.org.br/efp-ind.htm&lt;/a&gt;.&lt;/div&gt;
  &lt;div class=&#34;csl-entry&#34;&gt;&lt;a id=&#34;citeproc_bib_item_3&#34;&gt;&lt;/a&gt;Wolfram, Stephen. 2023. “What Is Chatgpt Doing . and Why Does It Work?” Stephen Wolfram Writings. &lt;a href=&#34;https://writings.stephenwolfram.com/2023/02/what-is-chatgpt-doing-and-why-does-it-work/&#34;&gt;https://writings.stephenwolfram.com/2023/02/what-is-chatgpt-doing-and-why-does-it-work/&lt;/a&gt;.&lt;/div&gt;
&lt;/div&gt;</content>
    
    <category term="philosophy"/>
    
    
    <category term="blog"/>
    
  </entry>
  
  <entry>
    <title>An illustrated way to enable openVPN on Qubes OS 4.1.2</title>
    <link rel="alternate" href="https://ebellani.github.io/blog/2023/vpn-qubes/"/>
    <id>https://ebellani.github.io/blog/2023/vpn-qubes/</id>
    <published>2023-07-01T00:00:00Z</published>
    <updated>2023-07-01T00:00:00Z</updated>
    <summary>In my view, Qubes OS lives up to its motto: A reasonably secure operating system. I use it for work and personal matters every day.
One challenging bit, when you use it in a work setting specially, is to set up a VPN qube for your app qubes.
There are probably other ways to do this, but the way I chose to structure my setup was the following:
 After you create your app qube for the VPN and assuming your template is Debian, go to the template terminal (Debian 11) and run:</summary>
    <content type="html">&lt;p&gt;In my view, Qubes OS lives up to its motto: &lt;code&gt;A reasonably secure operating system&lt;/code&gt;. I use it for work and personal matters every day.&lt;/p&gt;
&lt;p&gt;One challenging bit, when you use it in a work setting specially, is to
set up a VPN qube for your &lt;a href=&#34;https://www.qubes-os.org/doc/glossary/#app-qube&#34;&gt;app qubes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;There are probably other ways to do this, but the way I chose to
structure my setup was the following:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;/ox-hugo/vpn_qubes.png&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;After you create your &lt;a href=&#34;https://www.qubes-os.org/doc/glossary/#app-qube&#34;&gt;app qube&lt;/a&gt; for the VPN and assuming your template is
Debian, go to the template terminal (Debian 11) and run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  $ sudo apt install openvpn network-manager-openvpn-gnome
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After this you should enable the network-manager service:&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;/ox-hugo/vpn-network-service.png&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;Here comes the (for me) obscure trick: after importing your opvn file
through the network manager:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to IPv4 Settings tab&lt;/li&gt;
&lt;li&gt;Click to the &lt;code&gt;Routes...&lt;/code&gt; button&lt;/li&gt;
&lt;li&gt;Select the &lt;code&gt;Use this connection only for resources on its network&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Why does it work? I don&amp;rsquo;t know. If you do, please email me.&lt;/p&gt;
</content>
    
    <category term="security"/>
    
    
    <category term="blog"/>
    
  </entry>
  
</feed>
